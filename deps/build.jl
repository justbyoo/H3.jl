using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(joinpath(@__DIR__, "usr"))
products = [
    LibraryProduct(prefix, ["libh3"], :libh3),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/wookay/H3Builder/releases/download/v3.6.3"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/H3.v3.6.3.aarch64-linux-musl.tar.gz", "07cc432933051629c9b77042b38d37c38da9cb96a8dfbf96e9afef86c26210b5"),
    Linux(:powerpc64le, libc=:glibc) => ("$bin_prefix/H3.v3.6.3.powerpc64le-linux-gnu.tar.gz", "2b1fda964dbc4259479e4d510546466e18de4ad3e1fc23aebd1c6317b58b19b3"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/H3.v3.6.3.arm-linux-musleabihf.tar.gz", "6d9cb6894c8cd1f084851a1126f17ab31463376004225d3f376edae8dee0250d"),
    Windows(:i686) => ("$bin_prefix/H3.v3.6.3.i686-w64-mingw32.tar.gz", "788a69402ebc0f702a9721103a35e225e89d29a76610dfeb8e756d7f0b0838f4"),
    Windows(:x86_64) => ("$bin_prefix/H3.v3.6.3.x86_64-w64-mingw32.tar.gz", "185849eb7e43b4efff143dd2c97078ce6307d0eae5588f94de9314213bdfb488"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/H3.v3.6.3.arm-linux-gnueabihf.tar.gz", "671dda3ee6b3f44589f4034f9320bceff157259806f2b1a5cd6cbbc103f515a5"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/H3.v3.6.3.x86_64-linux-musl.tar.gz", "0690128d283510cfcd8845973311a8ee12d070664951f1b058120d0ad833cc5b"),
    MacOS(:x86_64) => ("$bin_prefix/H3.v3.6.3.x86_64-apple-darwin14.tar.gz", "3f2d8270cff2a8065244c729a913a571b83dfdb4455e5b1cc97aafd322d727d3"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/H3.v3.6.3.x86_64-linux-gnu.tar.gz", "b68415079f674771b028cd6ce1323498272c77a6c8284b4e8994ef2123af8d7d"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/H3.v3.6.3.i686-linux-musl.tar.gz", "b176a3b89793df9e8b8e37995f450c72a624e66f0d26596a2349267a288c37ce"),
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/H3.v3.6.3.aarch64-linux-gnu.tar.gz", "f53d2832e31de3a11b787422e387912bc5a0f9bc7adb5c1aa360e8ef4d724aef"),
    FreeBSD(:x86_64) => ("$bin_prefix/H3.v3.6.3.x86_64-unknown-freebsd11.1.tar.gz", "7b1523694876d4cc70f5259823b24ee51164365455600bddf48afbf856cb21b9"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/H3.v3.6.3.i686-linux-gnu.tar.gz", "74da750bd2f5dcae3416970d34b6db6eafbced3f14c45ded717311a943447399"),
)
#= generate download_info
function url2hash(url)
    path = download(url)
    open(io-> bytes2hex(BinaryProvider.sha256(io)), path)
end
for (system, (url, _)) in download_info
    hash = url2hash(url)
    println("    ", system, " => ", "(\"\$bin_prefix/", url[length(bin_prefix)+2:end], "\", \"", hash, "\"),")
end
=#

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
